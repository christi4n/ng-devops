{"ast":null,"code":"/* spinner */\nimport { NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { Config } from \"../../app-config\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"light\": a0\n  };\n};\n\nfunction LoaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelement(3, \"div\");\n    i0.ɵɵelement(4, \"div\");\n    i0.ɵɵelement(5, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 4);\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵelement(8, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵelement(10, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵelement(12, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 5);\n    i0.ɵɵelementStart(14, \"defs\");\n    i0.ɵɵelementStart(15, \"filter\", 6);\n    i0.ɵɵelement(16, \"feGaussianBlur\", 7);\n    i0.ɵɵelement(17, \"feColorMatrix\", 8);\n    i0.ɵɵelement(18, \"feBlend\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r0.themeConfig.themeType === \"light\"));\n  }\n}\n\nexport let LoaderComponent = /*#__PURE__*/(() => {\n  class LoaderComponent {\n    constructor(router, document, activatedRoute) {\n      this.router = router;\n      this.document = document;\n      this.activatedRoute = activatedRoute;\n      this.isSpinnerVisible = true;\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n          this.isSpinnerVisible = false;\n        }\n      }, () => {\n        this.isSpinnerVisible = false;\n      });\n      this.themeConfig = Config.config;\n    }\n\n    ngOnDestroy() {\n      this.isSpinnerVisible = false;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  LoaderComponent.ɵfac = function LoaderComponent_Factory(t) {\n    return new (t || LoaderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  LoaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoaderComponent,\n    selectors: [[\"app-loader\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"preloader\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"preloader\", 3, \"ngClass\"], [1, \"outer\"], [1, \"infinityChrome\"], [1, \"infinity\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"version\", \"1.1\", 1, \"goo-outer\"], [\"id\", \"goo\"], [\"in\", \"SourceGraphic\", \"stdDeviation\", \"6\", \"result\", \"blur\"], [\"in\", \"blur\", \"values\", \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\", \"result\", \"goo\"], [\"in\", \"SourceGraphic\", \"in2\", \"goo\"]],\n    template: function LoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoaderComponent_div_0_Template, 19, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isSpinnerVisible);\n      }\n    },\n    directives: [i2.NgIf, i2.NgClass],\n    styles: [\"\"]\n  });\n  return LoaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}