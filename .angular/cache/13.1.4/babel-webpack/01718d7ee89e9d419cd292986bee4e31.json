{"ast":null,"code":"\"use strict\";\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('./lightbox-event.service');\n\nvar _c0 = [\"lb-overlay\", \"\"];\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar common_1 = require(\"@angular/common\");\n\nvar core_1 = require(\"@angular/core\");\n\nvar lightbox_event_service_1 = require(\"./lightbox-event.service\");\n\nvar LightboxOverlayComponent =\n/** @class */\nfunction () {\n  function LightboxOverlayComponent(_elemRef, _rendererRef, _lightboxEvent, _documentRef) {\n    var _this = this;\n\n    this._elemRef = _elemRef;\n    this._rendererRef = _rendererRef;\n    this._lightboxEvent = _lightboxEvent;\n    this._documentRef = _documentRef;\n    this.classList = 'lightboxOverlay animation fadeInOverlay';\n    this._subscription = this._lightboxEvent.lightboxEvent$.subscribe(function (event) {\n      return _this._onReceivedEvent(event);\n    });\n  }\n\n  LightboxOverlayComponent.prototype.close = function () {\n    // broadcast to itself and all others subscriber including the components\n    this._lightboxEvent.broadcastLightboxEvent({\n      id: lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE,\n      data: null\n    });\n  };\n\n  LightboxOverlayComponent.prototype.ngAfterViewInit = function () {\n    var fadeDuration = this.options.fadeDuration;\n\n    this._rendererRef.setStyle(this._elemRef.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n\n    this._rendererRef.setStyle(this._elemRef.nativeElement, 'animation-duration', fadeDuration + \"s\");\n\n    this._sizeOverlay();\n  };\n\n  LightboxOverlayComponent.prototype.onResize = function () {\n    this._sizeOverlay();\n  };\n\n  LightboxOverlayComponent.prototype.ngOnDestroy = function () {\n    this._subscription.unsubscribe();\n  };\n\n  LightboxOverlayComponent.prototype._sizeOverlay = function () {\n    var width = this._getOverlayWidth();\n\n    var height = this._getOverlayHeight();\n\n    this._rendererRef.setStyle(this._elemRef.nativeElement, 'width', width + \"px\");\n\n    this._rendererRef.setStyle(this._elemRef.nativeElement, 'height', height + \"px\");\n  };\n\n  LightboxOverlayComponent.prototype._onReceivedEvent = function (event) {\n    switch (event.id) {\n      case lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE:\n        this._end();\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  LightboxOverlayComponent.prototype._end = function () {\n    var _this = this;\n\n    this.classList = 'lightboxOverlay animation fadeOutOverlay'; // queue self destruction after the animation has finished\n    // FIXME: not sure if there is any way better than this\n\n    setTimeout(function () {\n      _this.cmpRef.destroy();\n    }, this.options.fadeDuration * 1000);\n  };\n\n  LightboxOverlayComponent.prototype._getOverlayWidth = function () {\n    return Math.max(this._documentRef.body.scrollWidth, this._documentRef.body.offsetWidth, this._documentRef.documentElement.clientWidth, this._documentRef.documentElement.scrollWidth, this._documentRef.documentElement.offsetWidth);\n  };\n\n  LightboxOverlayComponent.prototype._getOverlayHeight = function () {\n    return Math.max(this._documentRef.body.scrollHeight, this._documentRef.body.offsetHeight, this._documentRef.documentElement.clientHeight, this._documentRef.documentElement.scrollHeight, this._documentRef.documentElement.offsetHeight);\n  };\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", Object)], LightboxOverlayComponent.prototype, \"options\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", Object)], LightboxOverlayComponent.prototype, \"cmpRef\", void 0);\n\n  __decorate([core_1.HostListener('click'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], LightboxOverlayComponent.prototype, \"close\", null);\n\n  __decorate([core_1.HostListener('window:resize'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], LightboxOverlayComponent.prototype, \"onResize\", null);\n\n  LightboxOverlayComponent = __decorate([__param(3, core_1.Inject(common_1.DOCUMENT)), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2, lightbox_event_service_1.LightboxEvent, Object])], LightboxOverlayComponent);\n\n  LightboxOverlayComponent.ɵfac = function LightboxOverlayComponent_Factory(t) {\n    return new (t || LightboxOverlayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LightboxEvent), ɵngcc0.ɵɵdirectiveInject(common_1.DOCUMENT));\n  };\n\n  LightboxOverlayComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LightboxOverlayComponent,\n    selectors: [[\"\", \"lb-overlay\", \"\"]],\n    hostVars: 2,\n    hostBindings: function LightboxOverlayComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function LightboxOverlayComponent_click_HostBindingHandler() {\n          return ctx.close();\n        })(\"resize\", function LightboxOverlayComponent_resize_HostBindingHandler() {\n          return ctx.onResize();\n        }, false, ɵngcc0.ɵɵresolveWindow);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.classList);\n      }\n    },\n    inputs: {\n      options: \"options\",\n      cmpRef: \"cmpRef\"\n    },\n    attrs: _c0,\n    decls: 0,\n    vars: 0,\n    template: function LightboxOverlayComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return LightboxOverlayComponent;\n}();\n\nexports.LightboxOverlayComponent = LightboxOverlayComponent; //# sourceMappingURL=lightbox-overlay.component.js.map","map":null,"metadata":{},"sourceType":"script"}