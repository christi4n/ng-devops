{"ast":null,"code":"\"use strict\";\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('./lightbox-config.service');\n\nvar ɵngcc2 = require('./lightbox-event.service');\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar lightbox_component_1 = require(\"./lightbox.component\");\n\nvar lightbox_config_service_1 = require(\"./lightbox-config.service\");\n\nvar lightbox_event_service_1 = require(\"./lightbox-event.service\");\n\nvar lightbox_overlay_component_1 = require(\"./lightbox-overlay.component\");\n\nvar common_1 = require(\"@angular/common\");\n\nvar Lightbox =\n/** @class */\nfunction () {\n  function Lightbox(_componentFactoryResolver, _injector, _applicationRef, _lightboxConfig, _lightboxEvent, _documentRef) {\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._injector = _injector;\n    this._applicationRef = _applicationRef;\n    this._lightboxConfig = _lightboxConfig;\n    this._lightboxEvent = _lightboxEvent;\n    this._documentRef = _documentRef;\n  }\n\n  Lightbox.prototype.open = function (album, curIndex, options) {\n    var _this = this;\n\n    if (curIndex === void 0) {\n      curIndex = 0;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var overlayComponentRef = this._createComponent(lightbox_overlay_component_1.LightboxOverlayComponent);\n\n    var componentRef = this._createComponent(lightbox_component_1.LightboxComponent);\n\n    var newOptions = {}; // broadcast open event\n\n    this._lightboxEvent.broadcastLightboxEvent({\n      id: lightbox_event_service_1.LIGHTBOX_EVENT.OPEN\n    });\n\n    Object.assign(newOptions, this._lightboxConfig, options); // attach input to lightbox\n\n    componentRef.instance.album = album;\n    componentRef.instance.currentImageIndex = curIndex;\n    componentRef.instance.options = newOptions;\n    componentRef.instance.cmpRef = componentRef; // attach input to overlay\n\n    overlayComponentRef.instance.options = newOptions;\n    overlayComponentRef.instance.cmpRef = overlayComponentRef; // FIXME: not sure why last event is broadcasted (which is CLOSED) and make\n    // lightbox can not be opened the second time.\n    // Need to timeout so that the OPEN event is set before component is initialized\n\n    setTimeout(function () {\n      _this._applicationRef.attachView(overlayComponentRef.hostView);\n\n      _this._applicationRef.attachView(componentRef.hostView);\n\n      overlayComponentRef.onDestroy(function () {\n        _this._applicationRef.detachView(overlayComponentRef.hostView);\n      });\n      componentRef.onDestroy(function () {\n        _this._applicationRef.detachView(componentRef.hostView);\n      });\n      var containerElement = newOptions.containerElementResolver(_this._documentRef);\n      containerElement.appendChild(overlayComponentRef.location.nativeElement);\n      containerElement.appendChild(componentRef.location.nativeElement);\n    });\n  };\n\n  Lightbox.prototype.close = function () {\n    if (this._lightboxEvent) {\n      this._lightboxEvent.broadcastLightboxEvent({\n        id: lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE\n      });\n    }\n  };\n\n  Lightbox.prototype._createComponent = function (ComponentClass) {\n    var factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);\n\n    var component = factory.create(this._injector);\n    return component;\n  };\n\n  Lightbox = __decorate([__param(5, core_1.Inject(common_1.DOCUMENT)), __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver, core_1.Injector, core_1.ApplicationRef, lightbox_config_service_1.LightboxConfig, lightbox_event_service_1.LightboxEvent, Object])], Lightbox);\n\n  Lightbox.ɵfac = function Lightbox_Factory(t) {\n    return new (t || Lightbox)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc1.LightboxConfig), ɵngcc0.ɵɵinject(ɵngcc2.LightboxEvent), ɵngcc0.ɵɵinject(common_1.DOCUMENT));\n  };\n\n  Lightbox.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: Lightbox,\n    factory: function (t) {\n      return Lightbox.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return Lightbox;\n}();\n\nexports.Lightbox = Lightbox; //# sourceMappingURL=lightbox.service.js.map","map":null,"metadata":{},"sourceType":"script"}